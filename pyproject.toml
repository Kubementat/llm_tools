[project]
name = "llm_tools"
version = "0.2.9"
description = "A collection of tools for LLM interactions like prompt refinement and idea generation. It also provides a console chat client with speech to text feature."
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [{ name = "Julian Weber", email = "julianweberdev@gmail.com" }]
keywords = ["llm", "tools", "system-monitoring", "ai", "prompt refinement", "idea generation"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "openai",
    "psutil",
    "requests",
    "markdownify",
    "tabulate",
    "colorama",
    "click",
    "html2text",
    "dotenv",
    "pytest",
    "pytest-mock",
    "openai-whisper",
    "pyaudio"
]

[project.urls]
Homepage = "https://github.com/Kubementat/llm_tools"
Repository = "https://github.com/Kubementat/llm_tools"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["llm_tools*"]

[project.scripts]
benchmark-model = "llm_tools.cli.benchmark_model:main"
benchmark-results-merger = "llm_tools.cli.benchmark_results_merger:main"
benchmark-results-to-markdown = "llm_tools.cli.benchmark_results_to_markdown:main"
fetch-to-md = "llm_tools.cli.fetch_to_md:main"
generate-mantra = "llm_tools.cli.generate_mantra:main"
list-models = "llm_tools.cli.list_models:main"
idea-generator = "llm_tools.cli.idea_generator:main"
refine-and-send-prompt = "llm_tools.cli.refine_and_send_prompt:main"
refine-prompt = "llm_tools.cli.refine_prompt:main"
breakdown-task = "llm_tools.cli.breakdown_task:main"
send-prompt = "llm_tools.cli.send_prompt:main"
llmchat = "llm_tools.cli.llm_chat:main"
